name: C++ CMake Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    # Define a matrix to run on both Windows and macOS.
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure and build for Windows using Visual Studio.
      - name: Configure (Windows)
        if: runner.os == 'Windows'
        run: |
          cmake -S . -B build -G "Visual Studio 16 2019" -A x64

      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: |
          cmake --build build --config Release

      # Configure and build for macOS (Unix Makefiles by default).
      - name: Configure (macOS)
        if: runner.os == 'macOS'
        run: |
          cmake -S . -B build

      - name: Build (macOS)
        if: runner.os == 'macOS'
        run: |
          # Use all available cores
          cmake --build build -- -j$(sysctl -n hw.ncpu)
