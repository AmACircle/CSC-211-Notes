name: Build C++ Executables

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: write

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create build directory
        run: mkdir -p build-mac

      - name: Compile C++ files (macOS) with Clang
        run: |
          # Find all CPP files in the repository, including in subdirectories
          find . -name "*.cpp" -type f | while read -r file; do
            # Get the directory structure relative to the current directory
            rel_dir=$(dirname "$file" | sed 's/^\.\///')
            # Create the corresponding directory in build-mac if it doesn't exist
            mkdir -p "build-mac/$rel_dir"
            # Compile the file and place it in the correct subdirectory
            echo "Compiling $file to build-mac/$rel_dir/$(basename "${file%.cpp}")"
            clang++ -std=c++17 -o "build-mac/$rel_dir/$(basename "${file%.cpp}")" "$file"
          done

      - name: Commit and push build results
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull
          git add build-mac
          git commit -m "[CI] Added Mac builds."
          git push
        continue-on-error: true 
        
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Create build directory
        shell: pwsh
        run: New-Item -ItemType Directory -Path build-windows -Force

      - name: Compile C++ files (Windows)
        shell: pwsh
        run: |
          # Find all CPP files recursively
          Get-ChildItem -Path . -Filter *.cpp -Recurse | ForEach-Object {
            # Get relative directory path
            $relDir = $_.DirectoryName.Replace("$PWD\", "").Replace("$PWD/", "")
            if ($relDir -eq $PWD) { $relDir = "" }
            
            # Create target directory
            $targetDir = Join-Path "build-windows" $relDir
            New-Item -ItemType Directory -Path $targetDir -Force | Out-Null
            
            # Set output executable path
            $exeName = Join-Path $targetDir "$($_.BaseName).exe"
            
            # Compile
            Write-Host "Compiling $($_.FullName) to $exeName"
            cl /EHsc /Fe:"$exeName" $_.FullName
          }

      - name: Commit and push build results
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull
          git add build-windows
          git commit -m "[CI] Added Windows builds."
          git push
        continue-on-error: true
